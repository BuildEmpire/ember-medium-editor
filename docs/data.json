{
    "project": {
        "name": "ember-medium-editor",
        "description": "medium-editor for Ember Apps",
        "version": "v0.1.3",
        "url": "https://github.com/kolybasov/ember-medium-editor",
        "indexModule": "Usage"
    },
    "files": {
        "addon/components/medium-editor.js": {
            "name": "addon/components/medium-editor.js",
            "modules": {
                "ember-medium-editor": 1
            },
            "classes": {
                "MediumEditor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/index.js": {
            "name": "addon/index.js",
            "modules": {
                "Usage": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "ember-medium-editor": {
            "name": "ember-medium-editor",
            "submodules": {},
            "elements": {},
            "classes": {
                "MediumEditor": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "addon/components/medium-editor.js",
            "line": 15,
            "description": "Ember wrapper for `medium-editor` library.\n\nUsage:\n\n```handlebars\n{{medium-editor\n   model.text\n   options=(hash)\n   onChange=(action (mut model.text))}}\n```",
            "exports": ""
        },
        "Usage": {
            "name": "Usage",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "addon/index.js",
            "line": 1,
            "description": "## Installation\n\n```shell\nember install ember-medium-editor\n```\n\n## Usage\n\n```handlebars\n{{medium-editor\n   model.text\n   options=(hash)\n   onChange=(action (mut model.text))}}\n```"
        }
    },
    "classes": {
        "MediumEditor": {
            "name": "MediumEditor",
            "shortname": "MediumEditor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-medium-editor",
            "namespace": "",
            "file": "addon/components/medium-editor.js",
            "line": 15,
            "description": "Ember wrapper for `medium-editor` library.\n\nUsage:\n\n```handlebars\n{{medium-editor\n   model.text\n   options=(hash)\n   onChange=(action (mut model.text))}}\n```",
            "exports": ""
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "addon/components/medium-editor.js",
            "line": 32,
            "description": "Value to set into the editor. It is readonly.",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "value",
            "default": "null",
            "type": "String",
            "class": "MediumEditor",
            "module": "ember-medium-editor"
        },
        {
            "file": "addon/components/medium-editor.js",
            "line": 42,
            "description": "Options to pass to MediumEditor instance. List of all available options is\naccessible by link: https://github.com/yabwe/medium-editor/blob/master/OPTIONS.md",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "options",
            "default": "{}",
            "type": "{Object}",
            "class": "MediumEditor",
            "module": "ember-medium-editor"
        },
        {
            "file": "addon/components/medium-editor.js",
            "line": 53,
            "description": "`onChange` is alias for `editableInput` event. Lists of all events:\nhttps://github.com/yabwe/medium-editor/blob/master/CUSTOM-EVENTS.md",
            "access": "public",
            "tagname": "",
            "itemtype": "event",
            "name": "onChange",
            "default": "null",
            "type": "{function}",
            "class": "MediumEditor",
            "module": "ember-medium-editor"
        },
        {
            "file": "addon/components/medium-editor.js",
            "line": 79,
            "description": "Create `medium-editor` instance for components element and save it\nfor further usage.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_initEditor",
            "class": "MediumEditor",
            "module": "ember-medium-editor"
        },
        {
            "file": "addon/components/medium-editor.js",
            "line": 94,
            "description": "If handler from `medium-editor` events list is passed to component then\nsubscribe to it and pass handler.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_subscribeToEvents",
            "params": [
                {
                    "name": "editor",
                    "description": "– `medium-editor` instance",
                    "type": "MediumEditor"
                }
            ],
            "class": "MediumEditor",
            "module": "ember-medium-editor"
        },
        {
            "file": "addon/components/medium-editor.js",
            "line": 113,
            "description": "Subscribe for editableInput event if onChange handler is passed. Fire it\nonly if content did change.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_subscribeToOnChange",
            "params": [
                {
                    "name": "editor",
                    "description": "– `medium-editor` instance",
                    "type": "MediumEditor"
                }
            ],
            "class": "MediumEditor",
            "module": "ember-medium-editor"
        },
        {
            "file": "addon/components/medium-editor.js",
            "line": 137,
            "description": "Update current `medium-editor` content if value did changed.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_setContent",
            "params": [
                {
                    "name": "editor",
                    "description": "– `medium-editor` instance",
                    "type": "MediumEditor"
                }
            ],
            "class": "MediumEditor",
            "module": "ember-medium-editor"
        },
        {
            "file": "addon/components/medium-editor.js",
            "line": 153,
            "description": "Options can be passed 3 different ways. Addon has default options, options\nhash and component properties from optionsList.\n\nPriority:\n\n1. Component properties\n2. options hash\n3. default options",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_getOptions",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "MediumEditor",
            "module": "ember-medium-editor"
        },
        {
            "file": "addon/components/medium-editor.js",
            "line": 184,
            "description": "Destroy MediumEditor instance if it is exists.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_destroyEditor",
            "class": "MediumEditor",
            "module": "ember-medium-editor"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: exports",
            "line": " addon/components/medium-editor.js:15"
        }
    ]
}